name: Workflow for Codecov example-typescript
on:
  push:
    branches:
      - master
  pull_request: {}
  workflow_dispatch: {}
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        lib:
          - calculator
          - worker
          - car

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Install dependencies
        run: npm install

      - name: Run tests for ${{ matrix.lib }}
        run: npm run test:${{ matrix.lib }}

      - name: Upload coverage to Codacy for ${{ matrix.lib }}
        run: bash <(curl -Ls https://coverage.codacy.com/get.sh) report -r coverage/lcov.info --partial
        env:
          CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}

      - name: Upload coverage to Codecov for ${{ matrix.lib }}
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: ${{ matrix.lib }}

      - name: SonarCloud Scan for ${{ matrix.lib }}
        uses: SonarSource/sonarcloud-github-action@master
        with:
          args: >
            -Dsonar.organization=dabbeg
            -Dsonar.projectKey=dabbeg_example-typescript_caclulator
            -Dsonar.sources=lib/${{ matrix.lib }}
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
            -Dsonar.test.exclusions=lib/${{ matrix.lib }}/test/**
            -Dsonar.tests=lib/${{ matrix.lib }}/test
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  final:
    runs-on: ubuntu-latest
    needs:
      - build

    steps:
      - name: Finalize codacy upload
        run: bash <(curl -Ls https://coverage.codacy.com/get.sh) final
        env:
          CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
